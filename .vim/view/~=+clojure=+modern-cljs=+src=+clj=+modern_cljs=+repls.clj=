let s:so_save = &so | let s:siso_save = &siso | set so=0 siso=0
argglobal
let s:cpo_save=&cpo
set cpo&vim
inoremap <buffer> <expr> <Del> PareditDel()
inoremap <buffer> <expr> <BS> PareditBackspace(0)
nmap <buffer> gd <Plug>FireplaceDtabjump
nmap <buffer> d <Plug>FireplaceDsplit
nmap <buffer>  <Plug>FireplaceDsplit
vnoremap <buffer> <silent> ( :call PareditFindOpening('(',')',1)
nnoremap <buffer> <silent> ( :call PareditFindOpening('(',')',0)
vnoremap <buffer> <silent> ) :call PareditFindClosing('(',')',1)
nnoremap <buffer> <silent> ) :call PareditFindClosing('(',')',0)
nnoremap <buffer> <silent> ,S :call PareditSplice()|silent! call repeat#set(",S")
vnoremap <buffer> <silent> ,W :call PareditWrapSelection("(",")")
nnoremap <buffer> <silent> ,W :call PareditWrap("(",")")|silent! call repeat#set(",W")
nnoremap <buffer> <silent> ,J :call PareditJoin()|silent! call repeat#set(",J")
nnoremap <buffer> <silent> ,O :call PareditSplit()|silent! call repeat#set(",O")
nnoremap <buffer> <silent> ,> :call PareditMoveRight()|silent! call repeat#set(",>")
nnoremap <buffer> <silent> ,< :call PareditMoveLeft()|silent! call repeat#set(",\<")
vnoremap <buffer> <silent> ,w{ :call PareditWrapSelection("{","}")
nnoremap <buffer> <silent> ,w{ :call PareditWrap("{","}")|silent! call repeat#set(",w{")
vnoremap <buffer> <silent> ,w[ :call PareditWrapSelection("[","]")
nnoremap <buffer> <silent> ,w[ :call PareditWrap("[","]")|silent! call repeat#set(",w[")
nnoremap <buffer> <silent> ,I :call PareditRaise()|silent! call repeat#set(",I")
nmap <buffer> <silent> ,<Down> d])%,S
nmap <buffer> <silent> ,<Up> d[(,S
vnoremap <buffer> <silent> ,w" :call PareditWrapSelection('"','"')
nnoremap <buffer> <silent> ,w" :call PareditWrap('"','"')|silent! call repeat#set(",w\"")
vnoremap <buffer> <silent> ,w( :call PareditWrapSelection("(",")")
nnoremap <buffer> <silent> ,w( :call PareditWrap("(",")")|silent! call repeat#set(",w(")
nnoremap <buffer> <silent> C v$:call PareditChange(visualmode(),1)
nnoremap <buffer> <silent> D v$:call PareditDelete(visualmode(),1)|silent! call repeat#set("D")
nmap <buffer> K <Plug>FireplaceK
nnoremap <buffer> <silent> P :call PareditPut("P")|silent! call repeat#set("P")
nnoremap <buffer> <silent> S V:call PareditChange(visualmode(),1)
nnoremap <buffer> <silent> X :call PareditEraseBck()|silent! call repeat#set("X")
nnoremap <buffer> <silent> [[ :call PareditFindDefunBck()
nmap <buffer> [d <Plug>FireplaceSource
nmap <buffer> [ <Plug>FireplaceDjump
nnoremap <buffer> <silent> ]] :call PareditFindDefunFwd()
nmap <buffer> ]d <Plug>FireplaceSource
nmap <buffer> ] <Plug>FireplaceDjump
nnoremap <buffer> <silent> caw :call PareditChangeSpec('caw',1)
nnoremap <buffer> <silent> ciw :call PareditChangeSpec('ciw',1)
nnoremap <buffer> <silent> cb :call PareditChangeSpec('cb',0)
nnoremap <buffer> <silent> cW :set opfunc=PareditChangeg@E
nnoremap <buffer> <silent> cw :call PareditChangeSpec('cw',1)
nnoremap <buffer> <silent> cc :call PareditChangeLines()
vnoremap <buffer> <silent> c :call PareditChange(visualmode(),1)
nnoremap <buffer> <silent> c :set opfunc=PareditChangeg@
nmap <buffer> cqc <Plug>FireplacePrompti
nmap <buffer> cqp <Plug>FireplacePrompt
nmap <buffer> cqq <Plug>FireplaceCountEdit
nmap <buffer> cq <Plug>FireplaceEdit
nmap <buffer> c1mm <Plug>FireplaceCount1MacroExpand
nmap <buffer> c1m <Plug>Fireplace1MacroExpand
nmap <buffer> cmm <Plug>FireplaceCountMacroExpand
nmap <buffer> cm <Plug>FireplaceMacroExpand
nmap <buffer> c!! <Plug>FireplaceCountFilter
nmap <buffer> c! <Plug>FireplaceFilter
nmap <buffer> cpp <Plug>FireplaceCountPrint
nmap <buffer> cp <Plug>FireplacePrint
nnoremap <buffer> <silent> dd :call PareditDeleteLines()|silent! call repeat#set("dd")
vnoremap <buffer> <silent> d :call PareditDelete(visualmode(),1)
nnoremap <buffer> <silent> d :call PareditSetDelete(v:count)g@
nnoremap <buffer> <silent> p :call PareditPut("p")|silent! call repeat#set("p")
nnoremap <buffer> <silent> s :call PareditEraseFwd()i
vnoremap <buffer> <silent> x :call PareditDelete(visualmode(),1)
nnoremap <buffer> <silent> x :call PareditEraseFwd()|silent! call repeat#set("x")
vnoremap <buffer> <silent> <Del> :call PareditDelete(visualmode(),1)
nnoremap <buffer> <silent> <Del> :call PareditEraseFwd()
map! <buffer> ( <Plug>FireplaceRecall
inoremap <buffer> <expr> " PareditInsertQuotes()
inoremap <buffer> <expr> ( PareditInsertOpening('(',')')
inoremap <buffer> <silent> ) =(pumvisible() ? "\<C-Y>" : ""):let save_ve=&ve:set ve=all:call PareditInsertClosing('(',')'):let &ve=save_ve
inoremap <buffer> <expr> [ PareditInsertOpening('[',']')
inoremap <buffer> <silent> ] =(pumvisible() ? "\<C-Y>" : ""):let save_ve=&ve:set ve=all:call PareditInsertClosing('[',']'):let &ve=save_ve
inoremap <buffer> <expr> { PareditInsertOpening('{','}')
inoremap <buffer> <silent> } =(pumvisible() ? "\<C-Y>" : ""):let save_ve=&ve:set ve=all:call PareditInsertClosing('{','}'):let &ve=save_ve
let &cpo=s:cpo_save
unlet s:cpo_save
setlocal keymap=
setlocal noarabic
setlocal noautoindent
setlocal nobinary
setlocal bufhidden=
setlocal buflisted
setlocal buftype=
setlocal nocindent
setlocal cinkeys=0{,0},0),:,0#,!^F,o,O,e
setlocal cinoptions=
setlocal cinwords=if,else,while,do,for,switch
setlocal colorcolumn=100,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999
setlocal comments=n:;
setlocal commentstring=;\ %s
setlocal complete=.,w,b,u,t
setlocal concealcursor=
setlocal conceallevel=0
setlocal completefunc=clojurecomplete#Complete
setlocal nocopyindent
setlocal cryptmethod=
setlocal nocursorbind
setlocal nocursorcolumn
setlocal nocursorline
setlocal define=^\\s*(def\\w*
setlocal dictionary=
setlocal nodiff
setlocal equalprg=
setlocal errorformat=%+G,classpath\\,/root/clojure/modern-cljs/test\\,/root/clojure/modern-cljs/src/clj\\,/root/clojure/modern-cljs/src/cljs\\,/root/clojure/modern-cljs/dev-resources\\,/root/clojure/modern-cljs/resources\\,/root/clojure/modern-cljs/target/classes\\,/root/.m2/repository/com/google/code/findbugs/jsr305/1.3.9/jsr305-1.3.9.jar\\,/root/.m2/repository/com/google/guava/guava/14.0.1/guava-14.0.1.jar\\,/root/.m2/repository/org/eclipse/jetty/jetty-io/7.6.8.v20121106/jetty-io-7.6.8.v20121106.jar\\,/root/.m2/repository/args4j/args4j/2.0.16/args4j-2.0.16.jar\\,/root/.m2/repository/clj-stacktrace/clj-stacktrace/0.2.5/clj-stacktrace-0.2.5.jar\\,/root/.m2/repository/domina/domina/1.0.3-SNAPSHOT/domina-1.0.3-SNAPSHOT.jar\\,/root/.m2/repository/org/clojure/java.classpath/0.2.2/java.classpath-0.2.2.jar\\,/root/.m2/repository/org/eclipse/jetty/orbit/javax.servlet/2.5.0.v201103041518/javax.servlet-2.5.0.v201103041518.jar\\,/root/.m2/repository/ns-tracker/ns-tracker/0.2.2/ns-tracker-0.2.2.jar\\,/root/.m2/repository/com/google/javascript/closure-compiler/v20130603/closure-compiler-v20130603.jar\\,/root/.m2/repository/ring/ring/1.2.2/ring-1.2.2.jar\\,/root/.m2/repository/org/eclipse/jetty/jetty-continuation/7.6.8.v20121106/jetty-continuation-7.6.8.v20121106.jar\\,/root/.m2/repository/org/clojure/tools.reader/0.8.0/tools.reader-0.8.0.jar\\,/root/.m2/repository/ring/ring-codec/1.0.0/ring-codec-1.0.0.jar\\,/root/.m2/repository/org/clojure/data.json/0.2.3/data.json-0.2.3.jar\\,/root/.m2/repository/clout/clout/1.1.0/clout-1.1.0.jar\\,/root/.m2/repository/org/clojure/core.incubator/0.1.0/core.incubator-0.1.0.jar\\,/root/.m2/repository/ring/ring-devel/1.2.2/ring-devel-1.2.2.jar\\,/root/.m2/repository/com/google/protobuf/protobuf-java/2.4.1/protobuf-java-2.4.1.jar\\,/root/.m2/repository/org/clojure/clojurescript/0.0-2069/clojurescript-0.0-2069.jar\\,/root/.m2/repository/com/cemerick/piggieback/0.1.0/piggieback-0.1.0.jar\\,/root/.m2/repository/ring/ring-core/1.2.1/ring-core-1.2.1.jar\\,/root/.m2/repository/org/clojure/tools.macro/0.1.0/tools.macro-0.1.0.jar\\,/root/.m2/repository/org/clojure/google-closure-library-third-party/0.0-20130212-95c19e7f0f5f/google-closure-library-third-party-0.0-20130212-95c19e7f0f5f.jar\\,/root/.m2/repository/org/clojure/google-closure-library/0.0-20130212-95c19e7f0f5f/google-closure-library-0.0-20130212-95c19e7f0f5f.jar\\,/root/.m2/repository/com/cemerick/austin/0.1.0/austin-0.1.0.jar\\,/root/.m2/repository/clj-time/clj-time/0.4.4/clj-time-0.4.4.jar\\,/root/.m2/repository/ring/ring-jetty-adapter/1.2.2/ring-jetty-adapter-1.2.2.jar\\,/root/.m2/repository/org/clojure/tools.nrepl/0.2.3/tools.nrepl-0.2.3.jar\\,/root/.m2/repository/commons-io/commons-io/2.4/commons-io-2.4.jar\\,/root/.m2/repository/org/clojure/clojure/1.5.1/clojure-1.5.1.jar\\,/root/.m2/repository/org/mozilla/rhino/1.7R4/rhino-1.7R4.jar\\,/root/.m2/repository/clojure-complete/clojure-complete/0.2.3/clojure-complete-0.2.3.jar\\,/root/.m2/repository/commons-codec/commons-codec/1.6/commons-codec-1.6.jar\\,/root/.m2/repository/hiccup/hiccup/1.0.5/hiccup-1.0.5.jar\\,/root/.m2/repository/joda-time/joda-time/2.1/joda-time-2.1.jar\\,/root/.m2/repository/compojure/compojure/1.1.6/compojure-1.1.6.jar\\,/root/.m2/repository/org/eclipse/jetty/jetty-http/7.6.8.v20121106/jetty-http-7.6.8.v20121106.jar\\,/root/.m2/repository/commons-fileupload/commons-fileupload/1.3/commons-fileupload-1.3.jar\\,/root/.m2/repository/org/eclipse/jetty/jetty-util/7.6.8.v20121106/jetty-util-7.6.8.v20121106.jar\\,/root/.m2/repository/org/json/json/20090211/json-20090211.jar\\,/root/.m2/repository/org/clojure/tools.namespace/0.2.4/tools.namespace-0.2.4.jar\\,/root/.m2/repository/ring/ring-servlet/1.2.2/ring-servlet-1.2.2.jar\\,/root/.m2/repository/org/eclipse/jetty/jetty-server/7.6.8.v20121106/jetty-server-7.6.8.v20121106.jar
setlocal expandtab
if &filetype != 'clojure'
setlocal filetype=clojure
endif
setlocal foldcolumn=0
setlocal foldenable
setlocal foldexpr=0
setlocal foldignore=#
setlocal foldlevel=0
setlocal foldmarker={{{,}}}
setlocal foldmethod=manual
setlocal foldminlines=1
setlocal foldnestmax=20
setlocal foldtext=foldtext()
setlocal formatexpr=
setlocal formatoptions=ql
setlocal formatlistpat=^\\s*\\d\\+[\\]:.)}\\t\ ]\\s*
setlocal grepprg=
setlocal iminsert=0
setlocal imsearch=0
setlocal include=
setlocal includeexpr=tr(v:fname,'.-','/_')
setlocal indentexpr=GetClojureIndent()
setlocal indentkeys=!,o,O
setlocal noinfercase
setlocal iskeyword=@,48-57,_,192-255,?,-,*,!,+,/,=,<,>,.,:,$
setlocal keywordprg=
setlocal nolinebreak
setlocal nolisp
setlocal nolist
setlocal makeprg=lein
setlocal matchpairs=(:),{:},[:]
setlocal nomodeline
setlocal modifiable
setlocal nrformats=hex
setlocal number
setlocal numberwidth=4
setlocal omnifunc=fireplace#omnicomplete
setlocal path=~/clojure/modern-cljs/test,~/clojure/modern-cljs/src/clj,~/clojure/modern-cljs/src/cljs,~/clojure/modern-cljs/dev-resources,~/clojure/modern-cljs/resources,~/clojure/modern-cljs/target/classes,~/.m2/repository/com/google/code/findbugs/jsr305/1.3.9/jsr305-1.3.9.jar,~/.m2/repository/com/google/guava/guava/14.0.1/guava-14.0.1.jar,~/.m2/repository/org/eclipse/jetty/jetty-io/7.6.8.v20121106/jetty-io-7.6.8.v20121106.jar,~/.m2/repository/args4j/args4j/2.0.16/args4j-2.0.16.jar,~/.m2/repository/clj-stacktrace/clj-stacktrace/0.2.5/clj-stacktrace-0.2.5.jar,~/.m2/repository/domina/domina/1.0.3-SNAPSHOT/domina-1.0.3-SNAPSHOT.jar,~/.m2/repository/org/clojure/java.classpath/0.2.2/java.classpath-0.2.2.jar,~/.m2/repository/org/eclipse/jetty/orbit/javax.servlet/2.5.0.v201103041518/javax.servlet-2.5.0.v201103041518.jar,~/.m2/repository/ns-tracker/ns-tracker/0.2.2/ns-tracker-0.2.2.jar,~/.m2/repository/com/google/javascript/closure-compiler/v20130603/closure-compiler-v20130603.jar,~/.m2/repository/ring/ring/1.2.2/ring-1.2.2.jar,~/.m2/repository/org/eclipse/jetty/jetty-continuation/7.6.8.v20121106/jetty-continuation-7.6.8.v20121106.jar,~/.m2/repository/org/clojure/tools.reader/0.8.0/tools.reader-0.8.0.jar,~/.m2/repository/ring/ring-codec/1.0.0/ring-codec-1.0.0.jar,~/.m2/repository/org/clojure/data.json/0.2.3/data.json-0.2.3.jar,~/.m2/repository/clout/clout/1.1.0/clout-1.1.0.jar,~/.m2/repository/org/clojure/core.incubator/0.1.0/core.incubator-0.1.0.jar,~/.m2/repository/ring/ring-devel/1.2.2/ring-devel-1.2.2.jar,~/.m2/repository/com/google/protobuf/protobuf-java/2.4.1/protobuf-java-2.4.1.jar,~/.m2/repository/org/clojure/clojurescript/0.0-2069/clojurescript-0.0-2069.jar,~/.m2/repository/com/cemerick/piggieback/0.1.0/piggieback-0.1.0.jar,~/.m2/repository/ring/ring-core/1.2.1/ring-core-1.2.1.jar,~/.m2/repository/org/clojure/tools.macro/0.1.0/tools.macro-0.1.0.jar,~/.m2/repository/org/clojure/google-closure-library-third-party/0.0-20130212-95c19e7f0f5f/google-closure-library-third-party-0.0-20130212-95c19e7f0f5f.jar,~/.m2/repository/org/clojure/google-closure-library/0.0-20130212-95c19e7f0f5f/google-closure-library-0.0-20130212-95c19e7f0f5f.jar,~/.m2/repository/com/cemerick/austin/0.1.0/austin-0.1.0.jar,~/.m2/repository/clj-time/clj-time/0.4.4/clj-time-0.4.4.jar,~/.m2/repository/ring/ring-jetty-adapter/1.2.2/ring-jetty-adapter-1.2.2.jar,~/.m2/repository/org/clojure/tools.nrepl/0.2.3/tools.nrepl-0.2.3.jar,~/.m2/repository/commons-io/commons-io/2.4/commons-io-2.4.jar,~/.m2/repository/org/clojure/clojure/1.5.1/clojure-1.5.1.jar,~/.m2/repository/org/mozilla/rhino/1.7R4/rhino-1.7R4.jar,~/.m2/repository/clojure-complete/clojure-complete/0.2.3/clojure-complete-0.2.3.jar,~/.m2/repository/commons-codec/commons-codec/1.6/commons-codec-1.6.jar,~/.m2/repository/hiccup/hiccup/1.0.5/hiccup-1.0.5.jar,~/.m2/repository/joda-time/joda-time/2.1/joda-time-2.1.jar,~/.m2/repository/compojure/compojure/1.1.6/compojure-1.1.6.jar,~/.m2/repository/org/eclipse/jetty/jetty-http/7.6.8.v20121106/jetty-http-7.6.8.v20121106.jar,~/.m2/repository/commons-fileupload/commons-fileupload/1.3/commons-fileupload-1.3.jar,~/.m2/repository/org/eclipse/jetty/jetty-util/7.6.8.v20121106/jetty-util-7.6.8.v20121106.jar,~/.m2/repository/org/json/json/20090211/json-20090211.jar,~/.m2/repository/org/clojure/tools.namespace/0.2.4/tools.namespace-0.2.4.jar,~/.m2/repository/ring/ring-servlet/1.2.2/ring-servlet-1.2.2.jar,~/.m2/repository/org/eclipse/jetty/jetty-server/7.6.8.v20121106/jetty-server-7.6.8.v20121106.jar
setlocal nopreserveindent
setlocal nopreviewwindow
setlocal quoteescape=\\
setlocal noreadonly
setlocal norelativenumber
setlocal norightleft
setlocal rightleftcmd=search
setlocal noscrollbind
setlocal shiftwidth=2
setlocal noshortname
setlocal nosmartindent
setlocal softtabstop=2
setlocal nospell
setlocal spellcapcheck=[.?!]\\_[\\])'\"\	\ ]\\+
setlocal spellfile=
setlocal spelllang=en
setlocal statusline=
setlocal suffixesadd=.clj,.cljx,.cljs,.java
setlocal swapfile
setlocal synmaxcol=3000
if &syntax != 'clojure'
setlocal syntax=clojure
endif
setlocal tabstop=4
setlocal tags=
setlocal textwidth=0
setlocal thesaurus=
setlocal noundofile
setlocal nowinfixheight
setlocal nowinfixwidth
setlocal wrap
setlocal wrapmargin=0
silent! normal! zE
let s:l = 7 - ((6 * winheight(0) + 19) / 39)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
7
normal! 015|
let &so = s:so_save | let &siso = s:siso_save
doautoall SessionLoadPost
" vim: set ft=vim :
